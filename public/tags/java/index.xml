<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>java on no42</title>
    <link>https://blog.no42.org/tags/java/</link>
    <description>Recent content in java on no42</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 20 Feb 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.no42.org/tags/java/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Docker, Java, Signals and Pid 1</title>
      <link>https://blog.no42.org/code/docker-java-signals-pid1/</link>
      <pubDate>Wed, 20 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.no42.org/code/docker-java-signals-pid1/</guid>
      <description>Running a Java application in a container seems to be very easy. The devil is in the details and I want to shed some light on the PID 1 problem when you run Java applications in containers. In a general running applications in containers should not have any state so you just don&amp;rsquo;t care, but reality is different forces you to have to.
Signals are used to a running process to behave in a certain ways.</description>
    </item>
    
    <item>
      <title>SSL and Java</title>
      <link>https://blog.no42.org/code/ssl-and-java/</link>
      <pubDate>Mon, 26 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.no42.org/code/ssl-and-java/</guid>
      <description>Running applications with a current Java is not a big deal thanks Let&amp;rsquo;s Encrypt. This article describes what happens if you want to authenticate your OpenNMS against LDAP using SSL with a self-certified certificate.
First of all I assume you have confiured verything so you can authenticate against LDAP in plaintext and you got a role mapping as you wanted it. If not you can have a look here.</description>
    </item>
    
    <item>
      <title>Build OpenNMS with Docker</title>
      <link>https://blog.no42.org/code/build-opennms-docker/</link>
      <pubDate>Sat, 14 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.no42.org/code/build-opennms-docker/</guid>
      <description>Being able to compiling an Open Source project is important. You can change the code, so you should also able to build it.
Why is there a dedicated Docker image for the build environment? The dependencies running a pre-build OpenNMS Horizon distribution and compiling from source are different. To build OpenNMS Horizon you need Apache Maven and to compile JICMP, JRRD you need a C compiler environment. This is nothing you want to carry when you just want to run OpenNMS Horizon.</description>
    </item>
    
    <item>
      <title>Centralized Logging with Graylog2</title>
      <link>https://blog.no42.org/code/centralized-logging-graylog2/</link>
      <pubDate>Fri, 17 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://blog.no42.org/code/centralized-logging-graylog2/</guid>
      <description>How many times do you connect with SSH to your remote server and cat, grep, tail and awk through your logs? It probably works for 3 servers and running a handful services, but if you have more, you should definitely spend some time to centralize your logs.
I personally prefer Graylog2 which can deal very well with different log formats like GELF, Syslog RFC&amp;rsquo;s. Just start some listener with the format and forward them to your Graylog2 instance.</description>
    </item>
    
  </channel>
</rss>